#include<bits/stdc++.h>
#include<stdlib.h>
using namespace std;

//To use these classes friend classes of Category class before defining them, they are just declared here.

class Vendor;
class ShoppingComplex;
class Customer;



class Category 
{
	
private :
friend Customer;	
friend Vendor;
map<string, int> ElectricalPrice;
map<string, int> ElectricalQuantity;
set<string> Electrical ;
set<string> ::iterator ElectricalIt;

map<string, int> FashionPrice;
map<string, int> FashionQuantity;
set<string> Fashion ;
set<string> ::iterator FashionIt;

map<string, int> DayTodayPrice;
map<string, int> DayTodayQuantity;
set<string> DayToday ;
set<string> ::iterator DayTodayIt;

map<string, int> StationaryPrice;
map<string, int> StationaryQuantity;
set<string> Stationary ;
set<string> ::iterator StationaryIt;


//Constructor adds objects to all categories
public :
Category(){
	
//electrical
	
	Electrical.insert("mobile");
	Electrical.insert("refrigerator");
	Electrical.insert("pendrive");
	Electrical.insert("laptop");
	Electrical.insert("television");
	
	ElectricalPrice["mobile"]=10000;
	ElectricalQuantity["mobile"]=10;
	
	ElectricalPrice["refrigerator"]=18000;
	ElectricalQuantity["refrigerator"]=10;
	
	ElectricalPrice["pendrive"]=500;
	ElectricalQuantity["pendrive"]=10;
	
	ElectricalPrice["laptop"]=50000;
	ElectricalQuantity["laptop"]=10;
	
	ElectricalPrice["television"]=14000;
	ElectricalQuantity["television"]=10;
	
	
// clothing	

	Fashion.insert("sarees");
	Fashion.insert("tshirt");
	Fashion.insert("jeens");
	Fashion.insert("shirt");
	Fashion.insert("goggle");
	
	FashionPrice["sarees"]=1500;
	FashionQuantity["sarees"]=8;
	
	FashionPrice["tshirt"]=500;
	FashionQuantity["tshirt"]=8;
	
	FashionPrice["jeens"]=1500;
	FashionQuantity["jeens"]=8;
	
	FashionPrice["shirt"]=600;
	FashionQuantity["shirt"]=8;
	
	FashionPrice["goggle"]=1000;
	FashionQuantity["goggle"]=8;
	
	
//Day-to-day needs
	
	DayToday.insert("biscuit");
	DayToday.insert("shampoo");
	DayToday.insert("facewash");
	DayToday.insert("soap");
	DayToday.insert("bodyspray");
	
	DayTodayPrice["biscuit"]=20;
	DayTodayQuantity["biscuit"]=50;
	
	DayTodayPrice["shampoo"]=80;
	DayTodayQuantity["shampoo"]=50;
	
	DayTodayPrice["facewash"]=20;
	DayTodayQuantity["facewash"]=50;
	
	DayTodayPrice["soap"]=25;
	DayTodayQuantity["soap"]=50;
	
	DayTodayPrice["bodyspray"]=200;
	DayTodayQuantity["bodyspray"]=50;
	
	
//stationary

	Stationary.insert("pen");
	Stationary.insert("notebook");
	Stationary.insert("book");
	Stationary.insert("pencil");
	Stationary.insert("nailcutter");
	
	StationaryPrice["pen"]=20;
	StationaryQuantity["pen"]=100;
	
	StationaryPrice["notebook"]=50;
	StationaryQuantity["notebook"]=100;
	
	StationaryPrice["book"]=500;
	StationaryQuantity["book"]=100;
	
	StationaryPrice["pencil"]=10;
	StationaryQuantity["pencil"]=100;
	
	StationaryPrice["nailcutter"]=20;
	StationaryQuantity["nailcutter"]=100;
	
	
}
	
	

} s;



class Vendor 
{
public:
string id;
string password;
string AnswerOfSecurityQuestion;	
Vendor(string id1,string password1);	
};

Vendor::Vendor(string id1,string password1){
	
	id=id1;
	password=password1;
	
	
	
}

class Customer
{
		
	
};




class ShoppingComplex : public Vendor 
{
	private:
	string name;
	string address;
	int n,i,j,k;
	
	public :
	
	AskVendorOrCustomer(){
		
	}
		
	ShoppingComplex(string name1,string address1,string id1,string password1);	
	
	void display();
	ShoppingComplex();
	MainMenu();
	
	
};

ShoppingComplex :: ShoppingComplex(string name1,string address1,string id1,string password1):Vendor(id1,password1){

	name=name1;
	address=address1;
	
		
}

ShoppingComplex ::MainMenu(){
	
	string name1,mobileNumber1;
	
	while(1){
		
		cout<<"\n\n\n\n\n\n\n\n\n\n\t\t***************** WELCOME TO "<<name<<" SHOPPING COMPLEX *****************";	
		cout<<"\n\n\n\n\n";
		cout<<"\t\t\t\t\tEnter who are you\n\t\t\t\t\t1.Vendor\n\t\t\t\t\t2.Customer\n\n\n\n\n\t\t\tEnter 0 to exit\n\n\n\n\n\n";
		cin>>n;
		
		switch(n){
			
			case 1:
				system("cls");
				cout<<"Enter your name"
				Customer c;
			
		}
	
	}
}

void ShoppingComplex :: display(){
	cout<<"      "<<name<<"\n";
	cout<<"      "<<address<<"\n";
	
}





int main(){






ShoppingComplex sh("BHARAT","Surathkal","satish","abcdefg");
/*
 This code is to display all items and their prices along with their quantities
	
Category s;
int i;

s.FashionIt=s.Fashion.begin();

for(s.FashionIt;s.FashionIt!=s.Fashion.end();s.FashionIt++)
	cout<<*s.FashionIt<<"\t\t"<<s.FashionPrice[*s.FashionIt]<<"\t\t"<<s.FashionQuantity[*s.FashionIt]<<"\n";
	
s.ElectricalIt=s.Electrical.begin();

for(s.ElectricalIt;s.ElectricalIt!=s.Electrical.end();s.ElectricalIt++)
	cout<<*s.ElectricalIt<<"\t\t"<<s.ElectricalPrice[*s.ElectricalIt]<<"\t\t"<<s.ElectricalQuantity[*s.ElectricalIt]<<"\n";
	
s.DayTodayIt=s.DayToday.begin();

for(s.DayTodayIt;s.DayTodayIt!=s.DayToday.end();s.DayTodayIt++)
	cout<<*s.DayTodayIt<<"\t\t"<<s.DayTodayPrice[*s.DayTodayIt]<<"\t\t"<<s.DayTodayQuantity[*s.DayTodayIt]<<"\n";

s.StationaryIt=s.Stationary.begin();

for(s.StationaryIt;s.StationaryIt!=s.Stationary.end();s.StationaryIt++)
	cout<<*s.StationaryIt<<"\t\t"<<s.StationaryPrice[*s.StationaryIt]<<"\t\t"<<s.StationaryQuantity[*s.StationaryIt]<<"\n";			
*/



	
return 0;	
}



